<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration file for LogBack (slf4J implementation) See here for more
	details: http://gordondickens.com/wordpress/2013/03/27/sawing-through-the-java-loggers/ -->
<configuration scan="true" scanPeriod="30 seconds">

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>
    <property name="log.path" value="./" />
    <!-- To enable JMX Management -->
    <jmxConfigurator />

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>devops | %date{yyyy-MM-dd HH:mm:ss} | %-5level | %thread | %c{1}.%M\(%L\) | %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <appender name="file"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定日志文件的名称 <file>${compilePath}/exam.log</file> -->
        <file>${log.path}/total.log</file>
        <!-- 当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名 TimeBasedRollingPolicy：
            最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动。 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天生成一个新的日志文件，并且通过 %d{yyyy-MM-dd} 来指定日期格式 -->
            <fileNamePattern>logs/myapp-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>

            <!-- 设置最大历史日志文件数，这里是30天 -->
            <maxHistory>30</maxHistory>

            <!-- 当日志文件达到200MB时触发滚动 -->
            <maxFileSize>200MB</maxFileSize>

            <!-- 可选：设置总的日志文件大小上限，超过此值后将删除最旧的日志文件 -->
            <!--<totalSizeCap>20GB</totalSizeCap>-->
        </rollingPolicy>
        <!-- 日志输出格式：%d表示日期时间，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %logger{50} 表示logger名字最长50个字符，否则按照句点分割。
            %msg：日志消息，%n是换行符 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>devops | %date{yyyy-MM-dd HH:mm:ss} | %-5level | %thread | %c{1}.%M\(%L\) | %msg%n</pattern>
        </layout>
    </appender>

    <appender name="ASYNC_ROLLING_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="file"/>
    </appender>
    <!-- 打印sql语句 -->
    <!-- 修改日志级别不用重启服务器。所以默认是 info。请不要把debug 提交，若要查看更详细日志请开启  trace-->
    <logger name="cn.zhongzhi" level="INFO"/>
    <logger name="org.flowable.engine.impl.persistence" level="DEBUG"/>
    <logger name="java.sql.ResultSet" level="INFO"/>
    <logger name="java.sql.Connection" level="INFO"/>
    <logger name="org.springframework.data.redis" level="INFO"/>
    <logger name="java.sql.Connection" level="INFO"/>
    <logger name="java.sql.Statement" level="INFO"/>
    <logger name="java.sql.PreparedStatement" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="ASYNC_ROLLING_FILE"/>
        <appender-ref ref="console" />
    </root>
</configuration>